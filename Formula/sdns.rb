# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdns < Formula
  desc "A high-performance, recursive DNS resolver server with DNSSEC support, focused on preserving privacy"
  homepage "https://sdns.dev"
  version "1.6.0"

  depends_on "go" => :build

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/semihalev/sdns/releases/download/v1.6.0/sdns-1.6.0_darwin_amd64.tar.gz"
      sha256 "e385f6c1fae69011a9f7c428ef0ba3a8d75fd8d844ee4e8e58f59ff8977c7121"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/semihalev/sdns/releases/download/v1.6.0/sdns-1.6.0_darwin_arm64.tar.gz"
      sha256 "353c5eab08ca3a146270abc8d274fdd93482c7d78c3d53550151fbd605bcb2b2"

      def install
        bin.install "sdns"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.6.0/sdns-1.6.0_linux_amd64.tar.gz"
      sha256 "076fa724a050c7b986a658bdf64350f17eb0a8df5f5b6d169aad62680d5ab5e8"
      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? and !Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.6.0/sdns-1.6.0_linux_armv6.tar.gz"
      sha256 "d2b53d392d1a96c1c9cad68a8ca33902dedf212be87ec8a9bd7914b156e6282e"
      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.6.0/sdns-1.6.0_linux_arm64.tar.gz"
      sha256 "ac327ee66c981d859db1e96658d274aa81a06b3b9cc5dd3720535d010ccc37e0"
      def install
        bin.install "sdns"
      end
    end
  end

  service do
    run [opt_bin/"sdns", "-config", etc/"sdns.conf"]
    keep_alive true
    require_root true
    error_log_path var/"log/sdns.log"
    log_path var/"log/sdns.log"
    working_dir opt_prefix
  end

  test do
    fork do
      exec bin/"sdns", "-config", testpath/"sdns.conf"
    end
    sleep(2)
    assert_predicate testpath/"sdns.conf", :exist?
  end
end
