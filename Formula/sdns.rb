# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdns < Formula
  desc "Privacy important, fast, recursive dns resolver server with dnssec support"
  homepage "https://sdns.dev"
  version "1.2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/semihalev/sdns/releases/download/v1.2.0/sdns-1.2.0_darwin_amd64.tar.gz"
      sha256 "6ec6f3a2182a600312e1d32ccb6693818087a67fe6977fee6cab2b638baa6914"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/semihalev/sdns/releases/download/v1.2.0/sdns-1.2.0_darwin_arm64.tar.gz"
      sha256 "9354fbae48d43a0841e0123d74b3ace3ca41a45019da52a1e940f936721d4909"

      def install
        bin.install "sdns"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.2.0/sdns-1.2.0_linux_armv6.tar.gz"
      sha256 "a3da007f045d54abbb1b3547cd80061ddd0450c811561515bf1a0d44152f15a0"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.2.0/sdns-1.2.0_linux_arm64.tar.gz"
      sha256 "d7acc05dbeb391d89d0746fd7bf39abe3c90ed610423453ff5324e4fc2281b6c"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/semihalev/sdns/releases/download/v1.2.0/sdns-1.2.0_linux_amd64.tar.gz"
      sha256 "74cd6702c1ab051a5ab8a74bc172ca431b4a61f7effadc1ccd57a6969468a5d2"

      def install
        bin.install "sdns"
      end
    end
  end

  depends_on "go" => :build

  plist_options startup: false

  def plist
    <<~EOS
          <?xml version="1.0" encoding="UTF-8"?>
      <!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      <plist version="1.0">
        <dict>
          <key>Label</key>
          <string>#{plist_name}</string>
          <key>ProgramArguments</key>
          <array>
            <string>#{opt_bin}/sdns</string>
            <string>-config</string>
            <string>#{etc}/sdns.conf</string>
          </array>
          <key>RunAtLoad</key>
          <true/>
          <key>KeepAlive</key>
          <true/>
          <key>StandardErrorPath</key>
          <string>#{var}/log/sdns.log</string>
          <key>StandardOutPath</key>
          <string>#{var}/log/sdns.log</string>
          <key>WorkingDirectory</key>
          <string>#{opt_prefix}</string>
        </dict>
      </plist>

    EOS
  end

  test do
    fork do
      exec bin / "sdns", "-config", testpath / "sdns.conf"
    end
    sleep(2)
    assert_predicate testpath / "sdns.conf", :exist?
  end
end
