# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdns < Formula
  desc "A high-performance, recursive DNS resolver server with DNSSEC support, focused on preserving privacy"
  homepage "https://sdns.dev"
  version "1.5.2"

  depends_on "go" => :build

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.2/sdns-1.5.2_darwin_amd64.tar.gz"
      sha256 "b920394921910c5a2d3c963bf70f5f8fbc1a18b11aad28db982f0921fcf03305"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.2/sdns-1.5.2_darwin_arm64.tar.gz"
      sha256 "18f09cf3044bbc87bbfbe65a17e84d9ea3e87bfe20f22f50b74e8398a5486099"

      def install
        bin.install "sdns"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.2/sdns-1.5.2_linux_amd64.tar.gz"
      sha256 "d3bb5a189580df8bfb93c2cf12f23db5c94befa2e6c304d654b43576ae3cc954"
      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? and !Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.2/sdns-1.5.2_linux_armv6.tar.gz"
      sha256 "d7ec4ad55d2c2b1ce6af5a3c6505812d288fb0ca8f0ad2fc73c245fb7f0f081f"
      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.2/sdns-1.5.2_linux_arm64.tar.gz"
      sha256 "f18f83593ac430cdf709f32e8aa3e8dc3e1c4bf3e50df82c2d8f5547e43de5c9"
      def install
        bin.install "sdns"
      end
    end
  end

  service do
    run [opt_bin/"sdns", "-config", etc/"sdns.conf"]
    keep_alive true
    require_root true
    error_log_path var/"log/sdns.log"
    log_path var/"log/sdns.log"
    working_dir opt_prefix
  end

  test do
    fork do
      exec bin/"sdns", "-config", testpath/"sdns.conf"
    end
    sleep(2)
    assert_predicate testpath/"sdns.conf", :exist?
  end
end
