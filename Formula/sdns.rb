# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdns < Formula
  desc "Privacy important, fast, recursive dns resolver server with dnssec support"
  homepage "https://sdns.dev"
  version "1.3.0"

  depends_on "go" => :build

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/semihalev/sdns/releases/download/v1.3.0/sdns-1.3.0_darwin_arm64.tar.gz"
      sha256 "08d54c3414a4e7335932c4785cf701da35724ec768aaf44742ba2c69477df158"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/semihalev/sdns/releases/download/v1.3.0/sdns-1.3.0_darwin_amd64.tar.gz"
      sha256 "e348a26118573fc9805a067e781a42112624e5f64ed25e4f2690e27c1e0a10de"

      def install
        bin.install "sdns"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.3.0/sdns-1.3.0_linux_armv6.tar.gz"
      sha256 "2a6040922375231764c53413de23a9d4b60804f017d189b4083d894d899c56d2"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.3.0/sdns-1.3.0_linux_arm64.tar.gz"
      sha256 "e5e7624176f5d24d3aabeeaecb0bc58f1ffe6c486fcfb0cc1225d7d7345517dc"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/semihalev/sdns/releases/download/v1.3.0/sdns-1.3.0_linux_amd64.tar.gz"
      sha256 "6f57794356afd306c5e8cd8470aaaa74bd73e5945ed519a0fb98a9c0e4656748"

      def install
        bin.install "sdns"
      end
    end
  end

  plist_options startup: false

  def plist
    <<~EOS
            <?xml version="1.0" encoding="UTF-8"?>
      <!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      <plist version="1.0">
        <dict>
          <key>Label</key>
          <string>#{plist_name}</string>
          <key>ProgramArguments</key>
          <array>
            <string>#{opt_bin}/sdns</string>
            <string>-config</string>
            <string>#{etc}/sdns.conf</string>
          </array>
          <key>RunAtLoad</key>
          <true/>
          <key>KeepAlive</key>
          <true/>
          <key>StandardErrorPath</key>
          <string>#{var}/log/sdns.log</string>
          <key>StandardOutPath</key>
          <string>#{var}/log/sdns.log</string>
          <key>WorkingDirectory</key>
          <string>#{opt_prefix}</string>
        </dict>
      </plist>

    EOS
  end

  test do
    fork do
      exec bin / "sdns", "-config", testpath / "sdns.conf"
    end
    sleep(2)
    assert_predicate testpath / "sdns.conf", :exist?
  end
end
