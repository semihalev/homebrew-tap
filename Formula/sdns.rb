# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdns < Formula
  desc "A high-performance, recursive DNS resolver server with DNSSEC support, focused on preserving privacy"
  homepage "https://sdns.dev"
  version "1.5.3"

  depends_on "go" => :build

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.3/sdns-1.5.3_darwin_amd64.tar.gz"
      sha256 "60c82d9b89753794aac2af68733973c0cab2ae8d45e32b00dd0bc1873837a1b9"

      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.3/sdns-1.5.3_darwin_arm64.tar.gz"
      sha256 "bd7400713558424e656448c67228c4507d0792c2c5fddeb17bfbc77fef8e7c9f"

      def install
        bin.install "sdns"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.3/sdns-1.5.3_linux_amd64.tar.gz"
      sha256 "fe74a27a75b1f08bd9e8a629f784681d64036b3be43925ee113c71c609bd4f7c"
      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? and !Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.3/sdns-1.5.3_linux_armv6.tar.gz"
      sha256 "89c09251efabd19a76e7eb2753e9d18aa52333ca0409175a96b5a4db4df6fae9"
      def install
        bin.install "sdns"
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/semihalev/sdns/releases/download/v1.5.3/sdns-1.5.3_linux_arm64.tar.gz"
      sha256 "255eb8a855d052b315e68db6e2b1974bd6c835ba3712711013f3fd2249ff1f4a"
      def install
        bin.install "sdns"
      end
    end
  end

  service do
    run [opt_bin/"sdns", "-config", etc/"sdns.conf"]
    keep_alive true
    require_root true
    error_log_path var/"log/sdns.log"
    log_path var/"log/sdns.log"
    working_dir opt_prefix
  end

  test do
    fork do
      exec bin/"sdns", "-config", testpath/"sdns.conf"
    end
    sleep(2)
    assert_predicate testpath/"sdns.conf", :exist?
  end
end
